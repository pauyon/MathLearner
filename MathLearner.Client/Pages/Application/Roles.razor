@page "/application/roles"
@inherits PageBase
@inject IRoleService RoleService
@inject NavigationManager NavigationManager

<PageTitle>Roles</PageTitle>

<GridTemplate PageTitle="@PageTitle" IsPageLoading="@IsPageLoading">
    <MainContent>
        <MudDataGrid Items="@_roleList" Elevation="10" Loading="_isGridLoading">
            <ToolBarContent>
                <GridToolbarRow RefreshCallback="RefreshData" NewCallback="@(() => NavigateToCreateOrEdit(null))" />
            </ToolBarContent>
            <Columns>
                <PropertyColumn Property="x => x.Id" />
                <PropertyColumn Property="x => x.Name" />
                <PropertyColumn Property="x => x.Description" />
                <TemplateColumn Title="Active" SortBy="x => x.IsActive">
                    <CellTemplate>
                        <ActiveChip IsActive="@context.Item.IsActive" />
                    </CellTemplate>
                </TemplateColumn>
                <GridCrudColumn TEntity="Role" />
            </Columns>
        </MudDataGrid>
    </MainContent>
</GridTemplate>

@code {
    private List<Role>? _roleList;
    private bool _isGridLoading;

    protected override async Task OnInitializedAsync()
    {
        PageTitle = typeof(Roles).Name;
        base.OnInitialized();
        await RefreshData();
        IsPageLoading = false;
    }

    private async Task RefreshData()
    {
        _isGridLoading = true;
        _roleList = await RoleService.GetAll();
        _isGridLoading = false;
    }

    private void NavigateToCreateOrEdit(Role? role)
    {
        NavigationManager.NavigateTo($"/application/roles/{role?.Id}");
    }
}
