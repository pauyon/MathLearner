@typeparam TEntity

<TemplateColumn T="TEntity" CellClass="d-flex justify-end" HeaderClass="d-flex justify-end" Title="Actions">
    <CellTemplate>
        <MudStack Row>
            <MudButton OnClick="@(() => Edit(context.Item))" Variant="@Variant.Filled" Color="Color.Info" Disabled="@IsDisabled">Edit</MudButton>
            <MudButton OnClick="@(() => Delete(context.Item))" Variant="@Variant.Filled" Color="Color.Error" Disabled="@IsDisabled">Delete</MudButton>
        </MudStack>
    </CellTemplate>
</TemplateColumn>

@code {
    [Parameter]
    public EventCallback<TEntity> EditCallback { get; set; }
    [Parameter]
    public EventCallback<TEntity> DeleteCallback { get; set; }

    [Parameter]
    public bool IsDisabled { get; set; }

    private async Task Edit(TEntity? entity)
    {
        await EditCallback.InvokeAsync(entity);
    }

    private async Task Delete(TEntity entity)
    {
        await DeleteCallback.InvokeAsync(entity);
    }
}
